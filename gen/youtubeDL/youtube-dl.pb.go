// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: youtube-dl.proto

package youtubeDL

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetVideoInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoURL string `protobuf:"bytes,1,opt,name=videoURL,proto3" json:"videoURL,omitempty"`
}

func (x *GetVideoInfoRequest) Reset() {
	*x = GetVideoInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_youtube_dl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoRequest) ProtoMessage() {}

func (x *GetVideoInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_youtube_dl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVideoInfoRequest) Descriptor() ([]byte, []int) {
	return file_youtube_dl_proto_rawDescGZIP(), []int{0}
}

func (x *GetVideoInfoRequest) GetVideoURL() string {
	if x != nil {
		return x.VideoURL
	}
	return ""
}

type RequestedFormats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filesize uint64 `protobuf:"varint,1,opt,name=filesize,proto3" json:"filesize,omitempty"`
	FormatId string `protobuf:"bytes,2,opt,name=format_id,json=formatId,proto3" json:"format_id,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Ext      string `protobuf:"bytes,4,opt,name=ext,proto3" json:"ext,omitempty"`
	VideoExt string `protobuf:"bytes,5,opt,name=video_ext,json=videoExt,proto3" json:"video_ext,omitempty"`
	AudioExt string `protobuf:"bytes,6,opt,name=audio_ext,json=audioExt,proto3" json:"audio_ext,omitempty"`
}

func (x *RequestedFormats) Reset() {
	*x = RequestedFormats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_youtube_dl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestedFormats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestedFormats) ProtoMessage() {}

func (x *RequestedFormats) ProtoReflect() protoreflect.Message {
	mi := &file_youtube_dl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestedFormats.ProtoReflect.Descriptor instead.
func (*RequestedFormats) Descriptor() ([]byte, []int) {
	return file_youtube_dl_proto_rawDescGZIP(), []int{1}
}

func (x *RequestedFormats) GetFilesize() uint64 {
	if x != nil {
		return x.Filesize
	}
	return 0
}

func (x *RequestedFormats) GetFormatId() string {
	if x != nil {
		return x.FormatId
	}
	return ""
}

func (x *RequestedFormats) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RequestedFormats) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *RequestedFormats) GetVideoExt() string {
	if x != nil {
		return x.VideoExt
	}
	return ""
}

func (x *RequestedFormats) GetAudioExt() string {
	if x != nil {
		return x.AudioExt
	}
	return ""
}

type GetVideoInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title            string              `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Thumbnail        string              `protobuf:"bytes,3,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`
	RequestedFormats []*RequestedFormats `protobuf:"bytes,4,rep,name=requested_formats,json=requestedFormats,proto3" json:"requested_formats,omitempty"`
}

func (x *GetVideoInfoResponse) Reset() {
	*x = GetVideoInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_youtube_dl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoResponse) ProtoMessage() {}

func (x *GetVideoInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_youtube_dl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVideoInfoResponse) Descriptor() ([]byte, []int) {
	return file_youtube_dl_proto_rawDescGZIP(), []int{2}
}

func (x *GetVideoInfoResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVideoInfoResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetVideoInfoResponse) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *GetVideoInfoResponse) GetRequestedFormats() []*RequestedFormats {
	if x != nil {
		return x.RequestedFormats
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*Response_InfoResponse
	//	*Response_Error
	Response isResponse_Response `protobuf_oneof:"response"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_youtube_dl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_youtube_dl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_youtube_dl_proto_rawDescGZIP(), []int{3}
}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *Response) GetInfoResponse() *GetVideoInfoResponse {
	if x, ok := x.GetResponse().(*Response_InfoResponse); ok {
		return x.InfoResponse
	}
	return nil
}

func (x *Response) GetError() *ErrorResponse {
	if x, ok := x.GetResponse().(*Response_Error); ok {
		return x.Error
	}
	return nil
}

type isResponse_Response interface {
	isResponse_Response()
}

type Response_InfoResponse struct {
	InfoResponse *GetVideoInfoResponse `protobuf:"bytes,1,opt,name=info_response,json=infoResponse,proto3,oneof"`
}

type Response_Error struct {
	Error *ErrorResponse `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*Response_InfoResponse) isResponse_Response() {}

func (*Response_Error) isResponse_Response() {}

var File_youtube_dl_proto protoreflect.FileDescriptor

var file_youtube_dl_proto_rawDesc = []byte{
	0x0a, 0x10, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x2d, 0x64, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x64, 0x6c, 0x1a, 0x0b,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x52, 0x4c, 0x22, 0xa9,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x45, 0x78, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f, 0x64, 0x6c, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73,
	0x52, 0x10, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0d, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65,
	0x5f, 0x64, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1f, 0x2e, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x5f,
	0x64, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65,
	0x5f, 0x64, 0x6c, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c,
	0x5a, 0x0a, 0x79, 0x6f, 0x75, 0x74, 0x75, 0x62, 0x65, 0x44, 0x4c, 0x2f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_youtube_dl_proto_rawDescOnce sync.Once
	file_youtube_dl_proto_rawDescData = file_youtube_dl_proto_rawDesc
)

func file_youtube_dl_proto_rawDescGZIP() []byte {
	file_youtube_dl_proto_rawDescOnce.Do(func() {
		file_youtube_dl_proto_rawDescData = protoimpl.X.CompressGZIP(file_youtube_dl_proto_rawDescData)
	})
	return file_youtube_dl_proto_rawDescData
}

var file_youtube_dl_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_youtube_dl_proto_goTypes = []interface{}{
	(*GetVideoInfoRequest)(nil),  // 0: youtube_dl.GetVideoInfoRequest
	(*RequestedFormats)(nil),     // 1: youtube_dl.RequestedFormats
	(*GetVideoInfoResponse)(nil), // 2: youtube_dl.GetVideoInfoResponse
	(*Response)(nil),             // 3: youtube_dl.Response
	(*ErrorResponse)(nil),        // 4: error.ErrorResponse
}
var file_youtube_dl_proto_depIdxs = []int32{
	1, // 0: youtube_dl.GetVideoInfoResponse.requested_formats:type_name -> youtube_dl.RequestedFormats
	2, // 1: youtube_dl.Response.info_response:type_name -> youtube_dl.GetVideoInfoResponse
	4, // 2: youtube_dl.Response.error:type_name -> error.ErrorResponse
	0, // 3: youtube_dl.GetVideoInfoService.GetVideo:input_type -> youtube_dl.GetVideoInfoRequest
	3, // 4: youtube_dl.GetVideoInfoService.GetVideo:output_type -> youtube_dl.Response
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_youtube_dl_proto_init() }
func file_youtube_dl_proto_init() {
	if File_youtube_dl_proto != nil {
		return
	}
	file_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_youtube_dl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_youtube_dl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestedFormats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_youtube_dl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_youtube_dl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_youtube_dl_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Response_InfoResponse)(nil),
		(*Response_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_youtube_dl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_youtube_dl_proto_goTypes,
		DependencyIndexes: file_youtube_dl_proto_depIdxs,
		MessageInfos:      file_youtube_dl_proto_msgTypes,
	}.Build()
	File_youtube_dl_proto = out.File
	file_youtube_dl_proto_rawDesc = nil
	file_youtube_dl_proto_goTypes = nil
	file_youtube_dl_proto_depIdxs = nil
}
