// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.23.4
// source: youtube-dl.proto

package youtubeDL

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GetVideoInfoServiceClient is the client API for GetVideoInfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GetVideoInfoServiceClient interface {
	GetVideo(ctx context.Context, in *GetVideoInfoRequest, opts ...grpc.CallOption) (*GetVideoInfoResponse, error)
}

type getVideoInfoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGetVideoInfoServiceClient(cc grpc.ClientConnInterface) GetVideoInfoServiceClient {
	return &getVideoInfoServiceClient{cc}
}

func (c *getVideoInfoServiceClient) GetVideo(ctx context.Context, in *GetVideoInfoRequest, opts ...grpc.CallOption) (*GetVideoInfoResponse, error) {
	out := new(GetVideoInfoResponse)
	err := c.cc.Invoke(ctx, "/youtube_dl.GetVideoInfoService/GetVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetVideoInfoServiceServer is the server API for GetVideoInfoService service.
// All implementations must embed UnimplementedGetVideoInfoServiceServer
// for forward compatibility
type GetVideoInfoServiceServer interface {
	GetVideo(context.Context, *GetVideoInfoRequest) (*GetVideoInfoResponse, error)
	mustEmbedUnimplementedGetVideoInfoServiceServer()
}

// UnimplementedGetVideoInfoServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGetVideoInfoServiceServer struct {
}

func (UnimplementedGetVideoInfoServiceServer) GetVideo(context.Context, *GetVideoInfoRequest) (*GetVideoInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideo not implemented")
}
func (UnimplementedGetVideoInfoServiceServer) mustEmbedUnimplementedGetVideoInfoServiceServer() {}

// UnsafeGetVideoInfoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GetVideoInfoServiceServer will
// result in compilation errors.
type UnsafeGetVideoInfoServiceServer interface {
	mustEmbedUnimplementedGetVideoInfoServiceServer()
}

func RegisterGetVideoInfoServiceServer(s grpc.ServiceRegistrar, srv GetVideoInfoServiceServer) {
	s.RegisterService(&GetVideoInfoService_ServiceDesc, srv)
}

func _GetVideoInfoService_GetVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVideoInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetVideoInfoServiceServer).GetVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/youtube_dl.GetVideoInfoService/GetVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetVideoInfoServiceServer).GetVideo(ctx, req.(*GetVideoInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// GetVideoInfoService_ServiceDesc is the grpc.ServiceDesc for GetVideoInfoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GetVideoInfoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "youtube_dl.GetVideoInfoService",
	HandlerType: (*GetVideoInfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVideo",
			Handler:    _GetVideoInfoService_GetVideo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "youtube-dl.proto",
}
